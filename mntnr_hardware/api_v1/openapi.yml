paths:
  /hardware:
    get:
      operationId: mntnr_hardware.api_v1.logic.say_hello
      summary: says hello
      tags: ['hardware']
      responses:
        default:
          description: success

  /hardware/datacenters:
    get:
      operationId: mntnr_hardware.api_v1.logic.datacenters_list
      summary: lists datacenters
      tags: ['hardware']
      responses:
        200:
          description: list of datacenters
          schema:
            $ref: '#/definitions/DatacenterList'
    post:
      operationId: mntnr_hardware.api_v1.logic.datacenter_create
      summary: creates a datacenter
      tags: ['hardware']
      parameters:
        - name: datacenter
          in: body
          description: the datacenter object to create
          schema:
            $ref: '#/definitions/Datacenter'
      responses:
        201:
          description: created datacenter
          schema:
            $ref: '#/definitions/Datacenter'

  /hardware/datacenters/{id}:
    get:
      operationId: mntnr_hardware.api_v1.logic.datacenter_detail
      summary: shows datacenter details
      tags: ['hardware']
      parameters:
        - name: id
          type: string
          in: path
          required: true
          description: UUID of the datacenter
      responses:
        200:
          description: datacenter details
          schema:
            $ref: '#/definitions/Datacenter'
    delete:
      operationId: mntnr_hardware.api_v1.logic.datacenter_delete
      summary: deletes datacenter
      tags: ['hardware']
      parameters:
        - name: id
          type: string
          in: path
          required: true
          description: UUID of the datacenter
      responses:
        default:
          description: success
    put:
      operationId: mntnr_hardware.api_v1.logic.datacenter_update
      summary: updates a datacenter
      tags: ['hardware']
      parameters:
        - name: id
          type: string
          in: path
          required: true
          description: UUID of the datacenter
        - name: datacenter
          in: body
          description: the datacenter object to create
          schema:
            $ref: '#/definitions/DatacenterUpdate'
      responses:
        200:
          description: datacenter details
          schema:
            $ref: '#/definitions/Datacenter'

  /hardware/cabinets:
    get:
      operationId: mntnr_hardware.api_v1.logic.cabinets_list
      summary: lists cabinets
      tags: ['hardware']
      responses:
        200:
          description: cabinet list
          schema:
            $ref: '#/definitions/CabinetList'
    post:
      operationId: mntnr_hardware.api_v1.logic.cabinet_create
      summary: creates a cabinet
      tags: ['hardware']
      parameters:
        - name: cabinet
          in: body
          description: the cabinet object to create
          schema:
            $ref: '#/definitions/Cabinet'
      responses:
        201:
          description: created cabinet
          schema:
            $ref: '#/definitions/Cabinet'

  /hardware/cabinets/{id}:
    get:
      operationId: mntnr_hardware.api_v1.logic.cabinet_detail
      summary: shows details of a cabinet
      tags: ['hardware']
      parameters:
        - name: id
          type: string
          in: path
          required: true
          description: UUID of the cabinet
      responses:
        200:
          description: cabinet
          schema:
            $ref: '#/definitions/Cabinet'
    delete:
      operationId: mntnr_hardware.api_v1.logic.cabinet_delete
      summary: deletes cabinet
      tags: ['hardware']
      parameters:
        - name: id
          type: string
          in: path
          required: true
          description: UUID of the cabinet
      responses:
        200:
          description: cabinet deleted
    put:
      operationId: mntnr_hardware.api_v1.logic.cabinet_update
      summary: updates cabinet
      tags: ['hardware']
      parameters:
        - name: id
          type: string
          in: path
          required: true
          description: UUID of the cabinet
        - name: cabinet
          in: body
          description: cabinet json
          schema:
            $ref: '#/definitions/CabinetUpdate'
      responses:
        200:
          description: updated cabinet
          schema:
            $ref: '#/definitions/Cabinet'


definitions:
  DatacenterUpdate:
    type: object
    properties:
      name:
        type: string
        example: soma
      vendor:
        type: string
        example: hosting.com
      address:
        type: string
        description: where cabinets are
        example: 630 3rd St, San Francisco CA
      noc_phone:
        type: string
        example: 14155551212
      noc_email:
        type: string
        format: email
        example: noc@hosting.com
      noc_url:
        type: string
        format: url
        example: https://hosting.com
  Datacenter:
    required:
      - name
      - vendor
      - address
      - noc_phone
    allOf:
      - $ref: '#/definitions/DatacenterUpdate'
    properties:
      id:
        type: string
        format: uuid
        example: 95833eff-0e68-4137-95a9-23a40cca3b11
  DatacenterEmbedded:
    type: object
    required: ['id']
    properties:
      id:
        type: string
        format: uuid
        description: UUID of the datacenter object
        example: 3bdd8e5b-3ffb-4053-96fc-3d5fb73b88f9
      name:
        type: string
        example: hurricane electric
  DatacenterList:
    type: array
    items:
      $ref: '#/definitions/Datacenter'
  CabinetUpdate:
    type: object
    properties:
      name:
        type: string
        example: 'c23-r55-l7'
      datacenter:
        $ref: '#/definitions/DatacenterEmbedded'
      rack_units:
        type: integer
        example: 42
      depth:
        type: number
        description: inches from front rack post to rear rack post
        example: 41.34
      width:
        type: number
        description: inches from left rack post to right rack post
        example: 19
      attachment:
        type: string
        format: cabinet_attachment_enum
        description: CAGE_NUT_95, DIRECT_ATTACH, or OTHER
        example: CAGE_NUT_95
      fasteners:
        type: string
        format: cabinet_fastener_enum
        description: UNF_10_32, UNC_12_24, M5, M6 or OTHER
        example: UNF_10_32
  Cabinet:
    required:
      - name
      - datacenter
      - rack_units
      - depth
      - width
      - attachment
      - fasteners
    allOf:
      - $ref: '#/definitions/CabinetUpdate'
  CabinetList:
    type: array
    items:
      $ref: '#/definitions/Cabinet'

